ちゃんとコマンドのリスト作ろうよ

まず、グローバルエリアに書けることについて。

1.setPatternで参照されるもの。
bgColor: 背景色。未指定の場合は(220, 220, 255)（薄い青色）が設定される
infoColor: 情報テキストの文字色。未指定の場合は黒(0,0,0)になる

2.それ以外。parsePatternSeedで参照される。

x, y: 幅に対する割合で指定する。ノードユニットの初期位置。

speed: ノードユニットの初期速さ。未指定なら0が入る。
direction: ノードユニットの初期進行方向。未指定なら0が入る。
これらの値を元にしてvelocityの初期値が設定される。

delay: ノードユニットの出現してから行動を開始するまでのフレーム数。未指定なら0.

shotSpeed: ノードユニットが発射するユニットの速さ。未指定なら0.
shotDirection: ノードユニットがユニットを発射する基本方向。未指定なら0.

color: ノードユニットの色。未指定なら薄い青。
shape: ノードユニットの形。未指定なら中くらいの正方形。
（色や形はHPやダメージなどの情報を持っている）

collisionFlag: ノードユニットの衝突フラグパターンで、5種類くらいある。未指定ならOFF（敵生成パターン）。
               これは最終的にステージを作ることを想定しているため。
               何か指定があるときはENEMYになる。敵を用意するときはそうしてね。

※shotColorやshotShapeはコマンドで変えるようになってる。理由はまあ、グローバルをこれ以上煩雑にしたくないっていうのと、
変える場合は結構コロコロ変えるから初期値だけ設定しといても整合性が失われるだけ（パターンをループさせる際に不具合が出るなど）で
あんまいいことがないから。shapeとcolorは基本ずっと同じだからね。speedとかはまあ、これ用意しないと動き出さないし、
単純なパターンならこれが無いといろいろ不便だしということで。

限りなく単純にしたパターンシードがこちら： mySystem.addPatternSeed({x:0.5, y:0.5, action:{main:[]}})
御覧の通り、中央に薄い青色のノードユニットが鎮座しているだけ。

じゃあいよいよアクションエリアに踏み込んでいくことにしよう。使えるコマンドは全部書きます。全部書かないと意味がないので。

パースの手順復習
1. アクションパートのキー配列を取得する。（アクションは各キーに配列が付随した形になっていてその見出しを全部得る、最初はmain.）
2. もしショートパートがあるなら、各々の配列をショートの情報を元にして正式なコマンドブロック配列に書き直す。
   この時点でもまだ単なるコマンドブロックの羅列でしかないことに注意する。
3. アクションキーを後ろから見ていき、lineやradialなどのデフォルトでのコマンドブロック配列の略形があれば
   それらをすべてばらす（その際に既に展開済みの配列が使われる場合もある）。ばらしたら、次のキーに
   向かう前にbackのところの文字列（catchと対になっている）をいくつ戻ればいいかの定数で置き換える。
   これはいちいち配列を見ながら数を計算するのが面倒くさいということで以前から改善したいポイントだった。実現したときは
   どれほど嬉しかったことか・・（ほんとうに面倒くさかった）。
4. 出来上がったコマンドブロックの配列達を後ろから見ていき、順繰りに実行可能なコマンドオブジェクトの配列で置き換えていく。
   後ろからでないといけない。生成するユニットに命令を付与する場合があってそれがうしろに書いてあるからその時点でオブジェクトの
   配列になってないとまずいので。最終的にはmainにその情報がすべて含まれる。それ以下のオブジェクトの配列は破棄される（というか
   mainの配列から参照できるので無くなってはいないけど）。
5. mainの内容をアクションとしてユニットに設定するパート・・
パースはここまで。次に、ユニットにパターンをセットするところを見ていく。それが終わったら、
コマンドブロックの指定の仕方を一通り見たうえでどのようなコマンドオブジェクトになるのか見ていく感じかしらね。

lineとかnwayはコマンドブロックの羅列の省略形なのでlineやnwayのactionプロパティの配列略表記で直接使うことはできない。
あそこはコマンドブロックの配列しか入れられない。省略形は不可、ということ。
actionとなっているが実際にはコマンドブロックの羅列なのよね・・ショットに付与するアクションとは若干意味合いが違うのよ。

shotActionのところ、単にsetActionにしてみたらいいと思う。
イージング移動実現するの忙しくて忘れてたわね。speed:["set", 1, 30]みたいなやつで、できないかな。
ていうかスピードの時間変化がすでにイージングなのよね。だからそういうのやるんだったらスピードの変化の仕方をいじらないと。

先にコマンドブロック一覧を作っちゃうね。
